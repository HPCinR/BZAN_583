---
title: "BZAN 583"
format: 
  revealjs:
    chalkboard: true
editor: source
---

## Welcome to HPC for Data Science in R!

#### BZAN 583

::: notes
Speaker notes go here.
:::

## Class will work in goups of 3-4

Can I have some random numbers? Five numbers from 0 1 2 3 4 5 6 7 8 9

```{r eval=FALSE}
roster = data.table::fread("~/UTK/roster/roster.csv")
names = paste(roster$StudentFirstName, roster$StudentLastName)
names
seed = readline("seed: ")
```

## Random Group Assignment

Shiny app to permute names. FIXME  
Please change seats so groups sit together.  
Swapping is allowed if all concerned groups agree.  

## Please share in your group

::: incremental
-   Your name:

    -   George Ostrouchov

-   One thing you love to do:

    -   Downhill ski - volunteer ski patrol at Sugar mountain

-   One thing you're proud of:

    -   My family (done a few things professionally too ...)

-   Where do you want to be doing in 5 years:

    -   Semi-retired
:::

```{r}
#| echo: false
countdown::countdown(2)
```

::: notes
-   Czechia: Prague through grade 9\
-   Canada: high school and University of Waterloo B.Math.\
-   USA: Iowa State University, Ph.D. Statistics
    -   Joined Oak Ridge National Laboratory, 1983\
    -   Retired from ORNL 2023 as Distinguished Scientist\
    -   Continue affiliation with U Tennessee, BAS Dep - BZAN 583
:::

## Survey

#### Programming experience?

#### Your laptop (Unix, Mac, Windows)?

#### git?

#### R?

#### R parallel package?

#### Unix (Linux, MacOS terminal)

#### HPC Cluster?

#### Torch or LLM experience?


## About me: Computing Tools

-   Languages: FORTRAN, Cobol, machine code, assembler code, APL, Snobol, JCL, SAS, C, [**unix shell**]{style="color:green;"}, S, [**R**]{style="color:green;"}\
-   Document preparation: nroff, ps, pdf, [**LaTeX**]{style="color:green;"}, [**Markdown**]{style="color:green;"}, .Rmd, [**Quarto .qmd**]{style="color:green;"}
-   Systems: IBM, DEC, Honeywell, VAX, PC, Intel, [**Mac**]{style="color:green;"}, [**HPE** (formerly Cray)]{style="color:green;"},

## Workflow for Remote Computing in R

![](/pics/01-intro/Workflow.png)

## Workflow for Remote Computing in R {background-image="/pics/01-intro//Workflow.png" background-size="300px" background-position="bottom right"}

#### Laptop RStudio

-   Familiar custom editing environment (Windows, Mac, Unix)
-   Interactive Syntax checking

#### GitHub/GitLab

-   Portability to remote computing
-   Version control
-   Collaboration

#### Cluster unix

-   Same environment for all
-   Batch job submission

::: notes
-   Portability - in your basement or on another continent
-   RStudio installs difficult - legacy OS on HPC
-   Bandwidth
:::

## Cooperating R Sessions on a Modern Cluster {background-image="/pics/01-intro/BatchRonClusterLaptop.jpg" background-size="800px" background-position="bottom right"}

8 Nodes (128 cores each)\
- 32 R sessions\
- each using 32 cores\
- 1024 cores total\

::: notes
-   

-   Laptop - login node - resource script\

-   BIG data on parallel file system - not on laptop!\

-   Can monitor a longer run with logins to compute nodes\

-   Batch
:::

## Software Needed on Laptop {background-image="/pics/01-intro//Workflow.png" background-size="300px" background-position="bottom right"}

-   Mac
    -   R, RStudio

    -   terminal, git (in Xcode)
-   Windows
    -   R, RStudio

    -   putty

    -   git

    -   WinSCP

## Software on Cluster {background-image="/pics/01-intro//Workflow.png" background-size="300px" background-position="top right"}

-   R, FlexiBLAS, OpenBLAS
-   OpenMPI
-   Arrow or HDF5 (for parallel I/O)
-   R (\>= 4.0)
-   And various packages, including `pbdMPI`

#### R vs conda-R Deployment:

-   Different package management philosophy
-   Can create conflicts if mixing, a layer of complexity

::: notes
-   Solves some dependency issues but creates others
:::

## GitHub + git (laptop to cluster)

::: {layout="[1,3,1]"}
![](/pics/01-intro/WorkflowGit.jpg)

![](/pics/01-intro/Git_operations.svg) [By Daniel Kinzler - Own work, CC BY 3.0](https://commons.wikimedia.org/w/index.php?curid=25223536)

![](/pics/01-intro/WorkflowCluster.jpg){fig-align="top"} ![](/pics/01-intro/WorkflowLaptop.jpg){fig-align="bottom"}
:::

# Making **git** easy {background-image="/pics/01-intro/WorkflowPushPull.jpg" background-size="300px" background-position="top right"}

-   Private and Public key pairs for Client and Server

    -   Git repository (GitHub, GigLab) is the **server**
    -   Your laptop and remote cluster are **clients**

-   Each **client** has own *key-pair*

    -   *Private key* stays on the **client**
    -   *Public key* is copied to the **server**

-   Works like a single-use password generator and authentication

    -   Client contacts server, server responds with a random string encrypted by client's public key
    -   Client decrypts with own private key and sends to server
    -   Server verifies agreement and opens secure connection

## Clusters are Linux systems {background-image="/pics/01-intro//WorkflowCluster.jpg" background-size="300px" background-position="top right"}

-   Linux is one of many descendants of original Unix. MacOS is another.

    -   Everything in Linux is a file
    -   Linux files are organized as a tree

::: notes
*Unix* (Bell Labs) was a play on an earlier *Multics* operating system (designed at MIT)
:::

## Linux Commands {.smaller background-image="/pics/01-intro//WorkflowCluster.jpg" background-size="300px" background-position="top right"}

In a terminal, you talk to a *shell* program (*bash* is most common)

-   Commands can have *options* and *arguments*

*Standard input* and *standard output* of a command is the terminal but can be redirected

-   **\<**, **\<\<**, **\>**, **\>\>** redirect standard input and output
-   *command1* **\|** *command2* pipes standard output1 to standard input2

Commands are files in directories listed in your PATH variable (try "echo \$PATH")

-   \$ means substitute variable value
-   *export* lists (or sets) variables and their values

There are many resources on the web to learn Linux basics

## Job Submission on Cluster {.smaller background-image="/pics/01-intro//WorkflowCluster.jpg" background-size="300px" background-position="top right"}

-   Command line submission
-   Shell script submission (preferred)

### SLURM

<mark>sbatch *your-shell-script.sh* </mark>

<mark>squeue -u *uid*</mark>

<mark>scancel *jobnumber*</mark>

### Software Modules

set software environment (PATH)

<mark>*module list*</mark> - list what is loaded\
<mark>*module avail*</mark> - list what is available\
<mark>*module load r*</mark>

## Hands-on Session 1 - Fork and clone your HPCinR FIXME {.smaller .tight}

-   Fork R4HPC to your GitHub account
    -   Login to GitHub and navigate to RBigData/R4HPC repository
    -   Fork button near top-right and copy forked repo url
-   Clone to New Project in RStudio
-   Open Terminal window (ssh or putty)
-   Login to cluster
-   clone your R4HPC (git clone ...)
-   You are ready for the development loop:
    -   edit -\> commit -\> push -\> pull -\> run -\> examine output -\> back to edit

::: {layout-ncol="2"}
![](/pics/01-intro/Workflow.png){width="200"} ![](/pics/01-intro/BatchRonClusterLaptop.jpg){width="200"}
:::

## Hands-on Session 1 - On Login Node

-   Below, replace `MACHINE` with your cluster name
-   Go to `R4HPC/code_0` directory and run
    -   `./packages_MACHINE.sh` to install all R packages that will be used
-   Go to `R$HPC/code_1` directory and run
    -   `sbatch hello_MACHINE_slurm.sh` to run a script that illustrates a basic two-level parallelism
    -   We will return to this script throughout the workshop as we learn its components
-   Examine output in `hello.e` and `hello.o` and notice that:
    -   4 nodes are involved
    -   4 R sessions were running on each node for a total of 16
    -   Each R session ran `mclapply` on several cores
    -   All `mclapply` process id's are reported
    -   The code figured out how many cores in total
    -   Only one R session wrote the output
